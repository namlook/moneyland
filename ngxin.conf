upstream moneyland {
    server localhost:8042; # la ou sera gunicorn
}

server { # redirection: moneyland.fr -> www.moneyland.fr
    server_name moneyland.fr;
    return 301 $scheme://www.moneyland.fr$request_uri;
}

# server {
#     listen 80;
#     server_name www.moneyland.fr;
#     return 301 https://$server_name$request_uri; # redirection http -> https
# }

server {
    listen 80;
    # listen 443 ssl;
    server_name www.moneyland.fr;

    access_log /var/log/nginx/moneyland-www.access.log;
    error_log /var/log/nginx/moneyland-www.error.log;

    client_max_body_size 150m;

    # ssl_certificate /etc/letsencrypt/live/www.moneyland.fr/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/www.moneyland.fr/privkey.pem;

    # Security options
    add_header X-XSS-Protection "1; mode=block";
    # add_header X-Frame-Options "SAMEORIGIN";  # Set by Django
    add_header X-Content-Type-Options "nosniff";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header Content-Security-Policy "script-src 'self'; object-src 'none'";

    # location = /favicon.ico {
    #     alias /home/moneyland/moneyland/static/favicon.ico;
    #     access_log off;
    # }
    #
    # location = /robots.txt {
    #     alias /home/moneyland/moneyland/static/robots.txt;
    #     access_log off;
    # }

    location /static/ { # moneyland.fr/static/foo -> /home/moneyland/moneyland/public/foo
        alias   /home/moneyland/moneyland/public/;
        expires 1y;
        access_log off;
    }

    # location /photos/ { # moneyland.fr/photos/foo -> /home/moneyland/moneyland/media/photos/foo
    #     alias  /home/moneyland/moneyland/media/photos/;
    #     expires 1w;
    #     try_files $uri @django; # regarde si le fichier existe, sinon passe a django
    # }
    #
    # location /private/ {
    #     error_page 418 = @django;
    #     return 418;
    # }
    #
    # location /xaccel/ {
    #     internal;
    #     alias /home/moneyland/moneyland/media/private/;
    #     expires 1w;
    # }
    #
    # location ^~ /progress {
    #     report_uploads proxied;
    # }

    # Toutes les autres urls sont transmises a Django sans autre forme de
    # proces. Notez qu'il n'y a pas moyen (je n'ai pas trouve) de forwarder
    # directement une url à une location nommee, et qu'il faut pour ca utiliser
    # un hack tout moche. Si quelqu'un a une meilleure idee…
    location / {
        error_page 418 = @django;
        return 418;
    }

    location @django {
        proxy_pass http://moneyland;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass_header Authorization;
	#track_uploads proxied 30s;
    }
}
